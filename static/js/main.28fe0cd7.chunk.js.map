{"version":3,"sources":["views/components/header.js","views/pages/top.js","views/components/workspace.js","views/pages/usage.js","views/pages/exercise.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","HeaderDiv","styled","div","Header","props","ThemeProvider","AppBar","position","Toolbar","className","to","TopDiv","Top","WorkspaceDiv","Workspace","loadButtonId","loadCircuitIdx","useEffect","document","getElementById","click","upload","event","reader_","FileReader","onload","date_array","Uint8Array","result","slice","text_array","i","length","text","value","updateCircuit","TextDecoder","decode","readAsArrayBuffer","target","files","id","onClick","e","saveFileName","src","process","alt","type","onChange","htmlFor","UsageDiv","Usage","ExerciseDiv","Exercise","AppDiv","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.28fe0cd7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import MediaQuery, { useMediaQuery } from \"react-responsive\";\n\nimport styled from \"styled-components\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#303030\",\n      main: \"#202020\",\n      dark: \"#101010\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst HeaderDiv = styled.div`\n  z-index: 99999;\n\n  div.header-right {\n    margin-left: auto;\n    /* margin-right: -12; */\n\n    .link-div {\n      border-left: 2px solid #505050;\n      width: 150px;\n      text-align: center;\n      display: inline-block;\n      /* margin: 0; */\n\n      a {\n        color: rgb(200, 200, 200);\n        display: block;\n        width: 100%;\n        height: 100%;\n\n        text-decoration: none;\n        font-family: \"M PLUS 1p\", \"Helvetica Neue\", Arial, sans-serif;\n        transition: 0.3s ease-out;\n        text-shadow: 0px 0px 0px rgba(170, 170, 170, 0.6);\n      }\n\n      /* \"to left\" / \"to right\" - affects initial color */\n      background: linear-gradient(to left, #202020 50%, #505050 50%) right;\n      background-size: 200%;\n      transition: 0.2s ease-out;\n\n      &:hover {\n        background-position: left;\n        a {\n          text-shadow: 2px 2px 2px rgba(150, 150, 150, 0.5);\n        }\n      }\n    }\n  }\n`;\n\nfunction Header(props) {\n  return (\n    <HeaderDiv>\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <span>回路シミュレータ</span>\n            <div className=\"header-right\">\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/\">トップ</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/usage\">使い方</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/exercise\">練習</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/work1\">課題1</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/work2\">課題2</Link>\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </ThemeProvider>\n    </HeaderDiv>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst TopDiv = styled.div`\n  z-index: 1;\n`;\n\nfunction Top() {\n  return (\n    <TopDiv>\n      <h1>進め方</h1>\n      <h1>各種リンク</h1>\n      <div>\n        <p>講義資料</p>\n      </div>\n      <div>\n        <p>FAQ</p>\n      </div>\n      <div>\n        <p>西森研</p>\n      </div>\n    </TopDiv>\n  );\n}\n\nexport default Top;\n","import React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst WorkspaceDiv = styled.div`\n  margin: 0 3vw;\n\n  div.cjb-load-container {\n    margin-bottom: 20px;\n    display: grid;\n    grid-template-columns: 1fr 304px 1fr 304px 1fr;\n\n    div.pad {\n      display: inline-block;\n    }\n    div.button-div {\n      display: inline-block;\n      margin: 0 0px;\n    }\n    input[type=\"file\"] {\n      width: 0.1px;\n      height: 0.1px;\n      opacity: 0;\n      overflow: hidden;\n      position: absolute;\n      z-index: -1;\n    }\n\n    button,\n    label {\n      font-size: 0.9rem;\n      display: inline-block;\n      width: 100%;\n      height: 50px;\n      line-height: 50px;\n      color: #555;\n      font-weight: 700;\n      background-color: #f9f9f9;\n      border-radius: 5px;\n      border: 2px solid #666;\n\n      text-align: left;\n\n      position: relative;\n      padding: 0;\n\n      user-select: none;\n      -webkit-user-select: none;\n\n      cursor: pointer;\n\n      &:before {\n        z-index: -1;\n        position: absolute;\n        bottom: -8px;\n        left: -2px;\n\n        display: block;\n\n        width: 100%;\n        height: 8px;\n\n        content: \"\";\n        -webkit-transition: all 0.3s;\n        transition: all 0.3s;\n\n        border: 2px solid #666;\n        border-top: 1px solid #666;\n        border-radius: 0 0 0.5rem 0.5rem;\n        background-image: -webkit-repeating-linear-gradient(\n          135deg,\n          #404040,\n          #000 1px,\n          transparent 2px,\n          transparent 5px\n        );\n        background-image: repeating-linear-gradient(\n          -45deg,\n          #404040,\n          #404040 1px,\n          transparent 2px,\n          transparent 5px\n        );\n        background-size: 7px 7px;\n\n        -webkit-backface-visibility: hidden;\n        backface-visibility: hidden;\n      }\n\n      &:hover {\n        color: #444;\n        background-color: #eee;\n        &:before {\n          bottom: -5px;\n        }\n      }\n\n      & span.dummy-icon {\n        display: inline-block;\n        width: 45px;\n        height: 30px;\n      }\n\n      & span.button-text {\n        display: inline-block;\n        width: 255px;\n        text-align: center;\n      }\n\n      /* アイコン */\n      & img {\n        display: inline-block;\n        width: 30px;\n        height: 30px;\n\n        position: absolute;\n        top: 50%;\n        left: 0;\n        transform: translateY(-50%);\n        -webkit-transform: translateY(-50%);\n        margin: 0 0 0 15px;\n      }\n    }\n  }\n\n  div.simcir-container {\n    overflow: scroll;\n  }\n`;\n\nfunction Workspace(props) {\n  // props\n  //  .loadCircuitIdx: 初期ロード対象の回路インデックス(0始まり)\n  //  .saveFileName: 回路構成ダウンロード時のファイル名\n\n  const initCircuit = '{\"height\": 700, \"width\":2000}';\n  const loadButtonId = `load-circuit-${props.loadCircuitIdx}`;\n\n  // class componentでの'componentDidMout' とか 'componentDidUpdate'とかと類似\n  useEffect(() => {\n    document.getElementById(loadButtonId).click();\n  });\n\n  const updateCircuit = function (text) {\n    document.getElementById(\"update-circuit\").value = text;\n    document.getElementById(\"update-circuit\").click();\n  };\n\n  const upload = function (event) {\n    var reader_ = new FileReader();\n\n    reader_.onload = function () {\n      let date_array = new Uint8Array(reader_.result.slice(0, 9));\n      let text_array = new Uint8Array(reader_.result.slice(10));\n\n      for (let i = 0; i < text_array.length; i++) {\n        text_array[i] -= date_array[8];\n      }\n\n      const text = new TextDecoder(\"utf-8\").decode(text_array);\n\n      updateCircuit(text);\n    };\n    reader_.readAsArrayBuffer(event.target.files[0]);\n  };\n\n  const download = function (event) {\n    document.getElementById(\"download-circuit\").value = props.saveFileName;\n    document.getElementById(\"download-circuit\").click();\n  };\n\n  return (\n    <WorkspaceDiv>\n      <div className=\"cjb-load-container\">\n        <div className=\"pad\"></div>\n        <div className=\"button-div\">\n          {/* <a id=\"dl-button\" type=\"file\" href=\"/#\" onClick={(e) => download(e)}>\n            <span className=\"dummy-icon\"></span>\n            <img\n              src={`${process.env.PUBLIC_URL}/load-button/dl.svg`}\n              alt=\"ダウンロードの画像\"\n            ></img>\n            <span className=\"button-text\">回路構成をダウンロード</span>\n          </a> */}\n          <button id=\"dl-button\" onClick={(e) => download(e)}>\n            <span className=\"dummy-icon\"></span>\n            <img\n              src={`${process.env.PUBLIC_URL}/load-button/dl.svg`}\n              alt=\"ダウンロードの画像\"\n            ></img>\n            <span className=\"button-text\">回路構成をダウンロード</span>\n          </button>\n        </div>\n        <div className=\"pad\"></div>\n        <div className=\"button-div\">\n          <input type=\"file\" id=\"ul-button\" onChange={(e) => upload(e)}></input>\n          <label htmlFor=\"ul-button\">\n            <span className=\"dummy-icon\"></span>\n            <img\n              src={`${process.env.PUBLIC_URL}/load-button/ul.svg`}\n              alt=\"アップロードの画像\"\n            ></img>\n            <span className=\"button-text\">回路構成をセットする</span>\n          </label>\n        </div>\n        <div className=\"pad\"></div>\n      </div>\n      <div className=\"simcir-container\">\n        <div className=\"simcir\">{initCircuit}</div>\n      </div>\n    </WorkspaceDiv>\n  );\n}\n\nexport default Workspace;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Workspace from \"../components/workspace\";\nimport \"./doc.scss\";\n\nconst UsageDiv = styled.div`\n  z-index: 1;\n\n  span.o-circle {\n    &:after {\n      display: inline-block;\n\n      background-color: rgb(251, 204, 45);\n\n      font-size: 0.8em;\n      text-align: center;\n      line-height: 0.8em;\n      width: 0.8em;\n      height: 0.8em;\n\n      margin-right: 0.1em;\n      margin-left: 0.1em;\n\n      border-radius: 50%;\n      border: 1px solid rgb(20, 20, 20);\n\n      content: \"\";\n    }\n  }\n  span.w-circle {\n    &:after {\n      display: inline-block;\n\n      background-color: rgb(240, 240, 240);\n\n      font-size: 0.8em;\n      text-align: center;\n      line-height: 0.8em;\n      width: 0.8em;\n      height: 0.8em;\n\n      margin-right: 0.1em;\n      margin-left: 0.1em;\n\n      border-radius: 50%;\n      border: 1px solid rgb(20, 20, 20);\n\n      content: \"\";\n    }\n  }\n`;\n\nfunction Usage() {\n  return (\n    <UsageDiv>\n      <section className=\"doc\">\n        <div className=\"page-title\">\n          <span>使い方</span>\n          <span>基本的な操作について</span>\n        </div>\n        <div className=\"page-desc\">\n          {/* デバイスの利用 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/cpu.svg`}\n                alt=\"デバイスの画像\"\n              ></img>\n              デバイスの利用\n            </div>\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  左側の<span className=\"hl1\">ツールボックス</span>\n                  から利用したいデバイスを選ぶ\n                </li>\n                <li>\n                  そのデバイスを右側の\n                  <span className=\"hl2\">ワークスペース</span>までドラッグし,\n                  ドロップする\n                </li>\n                <li>\n                  デバイスは任意に動かすことができ,\n                  矩形選択することで複数選択し一気に動かすこともできる\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          {/* デバイスの削除 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/eraser.svg`}\n                alt=\"消しゴムの画像\"\n              ></img>\n              デバイスの削除\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  <span className=\"hl2\">ワークスペース</span>\n                  上の削除したいデバイスを,\n                  <span className=\"hl1\">ツールボックス</span>\n                  までドラッグ＆ドロップ\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          {/* デバイスの接続と切断 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/connect.svg`}\n                alt=\"コネクタの画像\"\n              ></img>\n              デバイス同士の接続と解除\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  デバイスの入力部(橙円<span className=\"o-circle\"></span>\n                  )と出力部(白円<span className=\"w-circle\"></span>\n                  )をドラッグ操作することで接続\n                </li>\n                <li>\n                  デバイスの入力部(橙円<span className=\"o-circle\"></span>\n                  )をクリックすることで, 接続を解除\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          {/* デバイスラベルの変更 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/inspiration.svg`}\n                alt=\"鉛筆の画像\"\n              ></img>\n              デバイスラベルの変更\n            </div>\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  <span className=\"hl2\">ワークスペース</span>\n                  上のデバイスのラベルをダブルクリック\n                </li>\n                <li>\n                  ポップアップしたテキストボックスにて,\n                  ラベルを変更しEnterキーを押す\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          {/* 各デバイスの説明 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/presentation.svg`}\n                alt=\"説明の画像\"\n              ></img>\n              各デバイスの説明\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>DC:</li>\n                <li>Toggle: </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Workspace\n        loadCircuitIdx={0}\n        saveFileName=\"t00b000x_usage.cjb\"\n      ></Workspace>\n    </UsageDiv>\n  );\n}\n\nexport default Usage;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Workspace from \"../components/workspace\";\nimport \"./doc.scss\";\n\nconst ExerciseDiv = styled.div`\n  z-index: 1;\n\n  li {\n    margin-bottom: 0.7em !important;\n  }\n`;\n\nfunction Exercise() {\n  return (\n    <ExerciseDiv>\n      <section className=\"doc\">\n        <div className=\"page-title\">\n          <span>練習</span>\n          <span>実際にやってみよう</span>\n        </div>\n        <div className=\"page-desc\">\n          {/* 内容 */}\n          <div className=\"container\">\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  <span className=\"hl2\">ＮＯＴ</span>,{\" \"}\n                  <span className=\"hl2\">ＯＲ</span>,{\" \"}\n                  <span className=\"hl2\">ＡＮＤ</span>,{\" \"}\n                  <span className=\"hl2\">ＸＯＲ</span>回路の動作を確認せよ.\n                  入力の切り替えは<span className=\"hl1\">トグルスイッチ</span>\n                  を用いて, 動作の確認は<span className=\"hl1\">ＬＥＤ</span>\n                  を用いること.\n                </li>\n                <li>\n                  <span className=\"hl2\">ＪＫフリップフロップ</span>\n                  の動作を確認せよ. 入力となるパルスは\n                  <span className=\"hl1\">ＰｕｓｈＯｎスイッチ</span>\n                  を用いて, 動作の確認は<span className=\"hl1\">ＬＥＤ</span>\n                  を用いること.\n                </li>\n                <li>\n                  <span className=\"hl1\">トグルスイッチ</span>を用いて,{\" \"}\n                  <span className=\"hl2\">７セグメントディスプレイ</span>\n                  に０〜３を表示せよ\n                </li>\n                <li>\n                  <span className=\"hl1\">トグルスイッチ</span>を用いて,{\" \"}\n                  <span className=\"hl2\">４ビット７セグメントディスプレイ</span>\n                  に０〜Ｆを表示せよ\n                </li>\n                <li>\n                  任意の回路を作成し,{\" \"}\n                  <span className=\"hl2\">\n                    構成ファイル(.cjbファイル)をダウンロード\n                  </span>\n                  せよ. ワークスペース上部にある\n                  <span className=\"hl1\">「回路構成をダウンロード」ボタン</span>\n                  をクリックすることで, 回路の構成ファイルをダウンロードできる\n                </li>\n                <li>\n                  任意の構成ファイル(.cjbファイル)から,{\" \"}\n                  <span className=\"hl2\">回路を復元</span>せよ.{\" \"}\n                  ワークスペース上部にある\n                  <span className=\"hl1\">「回路構成をセットする」ボタン</span>\n                  をクリックすることで, セットしたい構成ファイルを選択できる\n                </li>\n              </ol>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Workspace\n        loadCircuitIdx={1}\n        saveFileName=\"t00b000x_exercise.cjb\"\n      ></Workspace>\n    </ExerciseDiv>\n  );\n}\n\nexport default Exercise;\n","import \"./App.css\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nimport Header from \"./views/components/header\";\nimport Top from \"./views/pages/top\";\nimport Usage from \"./views/pages/usage\";\nimport Exercise from \"./views/pages/exercise\";\n\nconst AppDiv = styled.div`\n  div.body-container {\n    margin-left: 2vw;\n    margin-right: 2vw;\n  }\n`;\n\nfunction App() {\n  return (\n    <AppDiv>\n      <BrowserRouter>\n        <Header></Header>\n        <div className=\"body-container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/\"\n              component={Top}\n            ></Route>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/usage\"\n              component={Usage}\n            ></Route>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/exercise\"\n              component={Exercise}\n            ></Route>\n            <Route exact path=\"/circuit-simulation-app/work1\">\n              work1\n            </Route>\n            <Route exact path=\"/circuit-simulation-app/work2\">\n              work2\n            </Route>\n            <Route>not found</Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </AppDiv>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}