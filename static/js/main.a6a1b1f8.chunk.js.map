{"version":3,"sources":["views/components/header.js","views/components/footer.js","views/components/outerLinkSvg.js","views/pages/top.js","views/components/workspace.js","views/components/imgPopup.js","views/pages/usage.js","views/pages/exercise.js","views/pages/work1.js","views/pages/work2.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","HeaderDiv","styled","div","Header","props","ThemeProvider","AppBar","position","Toolbar","className","src","process","alt","to","FooterrDiv","Footer","target","rel","href","ExSvg","svg","show","OuterLinkSvg","x","y","viewBox","d","TopDiv","Top","useEffect","window","scrollTo","WorkspaceDiv","Workspace","useState","inputVal","setInputVal","loadButtonId","loadCircuitIdx","document","getElementById","click","upload","event","value","reader_","FileReader","onload","date_array","Uint8Array","result","slice","text_array","i","length","text","updateCircuit","TextDecoder","decode","readAsArrayBuffer","files","id","onClick","e","saveFileName","type","onChange","htmlFor","ImgPopupDiv","ImgPopup","close","imgSrc","imgAlt","UsageDiv","Usage","isShow","setShow","ExerciseDiv","Exercise","Work1Div","isPlayed","Work1","setPlay","setTimeout","Work2Div","Work2","AppDiv","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6a1b1f8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import MediaQuery, { useMediaQuery } from \"react-responsive\";\n\nimport styled from \"styled-components\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#303030\",\n      main: \"#202020\",\n      dark: \"#101010\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst HeaderDiv = styled.div`\n  z-index: 99999;\n  position: relative;\n\n  span.header-logo-container {\n    position: relative;\n    display: inline-block;\n    height: 48px;\n\n    img {\n      height: 100%;\n    }\n\n    a {\n      position: absolute;\n      top: 0;\n      left: 0;\n\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  div.header-right {\n    margin-left: auto;\n    /* margin-right: -12; */\n\n    .link-div {\n      border-left: 2px solid #505050;\n      width: 130px;\n      text-align: center;\n      display: inline-block;\n      /* margin: 0; */\n\n      a {\n        color: rgb(200, 200, 200);\n        display: block;\n        width: 100%;\n        height: 100%;\n\n        text-decoration: none;\n        font-family: \"M PLUS 1p\", \"Helvetica Neue\", Arial, sans-serif;\n        transition: 0.3s ease-out;\n        text-shadow: 0px 0px 0px rgba(170, 170, 170, 0.6);\n      }\n\n      /* \"to left\" / \"to right\" - affects initial color */\n      background: linear-gradient(to left, #202020 50%, #505050 50%) right;\n      background-size: 200%;\n      transition: 0.2s ease-out;\n\n      &:hover {\n        background-position: left;\n        a {\n          color: rgb(250, 250, 250);\n          text-shadow: 2px 2px 2px rgba(150, 150, 150, 0.5);\n        }\n      }\n    }\n  }\n`;\n\nfunction Header(props) {\n  return (\n    <HeaderDiv>\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <span className=\"header-logo-container\">\n              <img\n                className=\"lab-logo\"\n                src={`${process.env.PUBLIC_URL}/footer/lab_logo.svg`}\n                alt=\"デバイスの画像\"\n              ></img>\n              <Link to=\"/circuit-simulation-app/\"></Link>\n            </span>\n            <div className=\"header-right\">\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/usage\">使い方</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/exercise\">練習</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/work1\">課題1</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/circuit-simulation-app/work2\">課題2</Link>\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </ThemeProvider>\n    </HeaderDiv>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nconst FooterrDiv = styled.div`\n  z-index: 99999;\n  position: relative;\n\n  display: flex;\n  align-items: center;\n\n  background-color: rgb(32, 32, 32);\n  color: rgb(200, 200, 200);\n  font-size: 0.8rem;\n\n  img.lab-logo {\n    width: 10%;\n    margin: 1rem;\n  }\n\n  span {\n    display: inline-block;\n\n    /* position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    -webkit-transform: translateY(-50%); */\n\n    &.righting {\n    }\n    &.link-container {\n      margin-left: auto;\n      margin-right: 2rem;\n\n      a {\n        margin-left: 1em;\n        text-decoration: none;\n        color: rgb(200, 200, 200);\n\n        &:hover {\n          color: rgb(230, 230, 230);\n        }\n      }\n    }\n  }\n`;\n\nfunction Footer(props) {\n  return (\n    <FooterrDiv>\n      <img\n        className=\"lab-logo\"\n        src={`${process.env.PUBLIC_URL}/footer/lab_logo.svg`}\n        alt=\"デバイスの画像\"\n      ></img>\n      <span className=\"righting\">\n        {\"(C) 2020- nishimori lab. All Rights Reserved.\"}\n      </span>\n      <span className=\"link-container\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://haru1843.github.io/simulate_circuit/\"\n        >\n          旧ページ\n        </a>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://nu-nishimori-lab.netlify.app/\"\n        >\n          研究室HP\n        </a>\n      </span>\n    </FooterrDiv>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst ExSvg = styled.svg`\n  /* display: ${(props) => (props.show ? \"block\" : \"none\")}; */\n`;\n\nfunction OuterLinkSvg(props) {\n  return (\n    <ExSvg x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n      <g>\n        <g>\n          <path\n            d=\"M488.727,0H302.545c-12.853,0-23.273,10.42-23.273,23.273c0,12.853,10.42,23.273,23.273,23.273h129.997L192.999,286.09\n\t\t\tc-9.089,9.089-9.089,23.823,0,32.912c4.543,4.544,10.499,6.816,16.455,6.816c5.956,0,11.913-2.271,16.457-6.817L465.455,79.458\n\t\t\tv129.997c0,12.853,10.42,23.273,23.273,23.273c12.853,0,23.273-10.42,23.273-23.273V23.273C512,10.42,501.58,0,488.727,0z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            d=\"M395.636,232.727c-12.853,0-23.273,10.42-23.273,23.273v209.455H46.545V139.636H256c12.853,0,23.273-10.42,23.273-23.273\n\t\t\tS268.853,93.091,256,93.091H23.273C10.42,93.091,0,103.511,0,116.364v372.364C0,501.58,10.42,512,23.273,512h372.364\n\t\t\tc12.853,0,23.273-10.42,23.273-23.273V256C418.909,243.147,408.489,232.727,395.636,232.727z\"\n          />\n        </g>\n      </g>\n    </ExSvg>\n  );\n}\n\nexport default OuterLinkSvg;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nimport OuterLinkSvg from \"../components/outerLinkSvg\";\n\nconst TopDiv = styled.div`\n  z-index: 1;\n\n  section {\n    /* min-height: 50vh; */\n    &:nth-of-type(2n + 1) {\n      color: rgb(30, 30, 30);\n    }\n    &:nth-of-type(2n) {\n      color: rgb(50, 50, 50);\n      background-color: rgb(230, 230, 230);\n    }\n\n    padding-top: 2rem;\n  }\n\n  section.desc {\n    text-align: center;\n    position: relative;\n\n    min-height: 400px;\n\n    span {\n      &.hl1 {\n        font-weight: 700;\n        color: rgb(199, 143, 90);\n        padding: 0.1em 0.2em 0 !important;\n      }\n      &.hl2 {\n        font-weight: 700;\n        color: rgb(90, 115, 161);\n        padding: 0.1em 0.2em 0 !important;\n      }\n    }\n\n    div.desc-title {\n      font-size: 1.5em;\n      font-weight: 700;\n    }\n\n    div.desc-content {\n      text-align: left;\n\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      -webkit-transform: translate(-50%, -50%);\n\n      white-space: nowrap;\n    }\n\n    ol {\n      list-style: none;\n      counter-reset: ol-counter;\n\n      li {\n        margin-bottom: 0.3em;\n        &:before {\n          display: inline-block;\n          counter-increment: ol-counter;\n          content: counter(ol-counter);\n\n          background-color: rgb(199, 143, 90);\n          color: white;\n\n          font-size: 1.2em;\n          font-weight: 700;\n          text-align: center;\n          line-height: 1.2em;\n          width: 1.2em;\n          height: 1.2em;\n\n          margin-right: 0.5em;\n\n          border-radius: 50%;\n        }\n      }\n    }\n  }\n\n  section.link {\n    text-align: center;\n\n    div.link-title {\n      font-size: 1.6em;\n      font-weight: 700;\n    }\n\n    div.link-grid-container {\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n      margin: 2rem 5% 0rem;\n      padding-bottom: 4rem;\n\n      a {\n        border-radius: 4px;\n        border: 2px solid rgb(65, 65, 65);\n        background: linear-gradient(\n            to bottom,\n            rgb(65, 65, 65) 50%,\n            rgb(240, 240, 240) 50%\n          )\n          bottom;\n        background-size: 100% 200%;\n        transition: 0.2s ease-out;\n\n        margin: 10px 10px;\n\n        color: rgb(30, 30, 30);\n        font-size: 1.1rem;\n        padding: 0.5em 0;\n\n        text-decoration: none;\n\n        &:hover {\n          color: rgb(255, 255, 255);\n          font-weight: 700;\n          background-position: top;\n        }\n\n        &.presentation:hover ~ div.link-desc {\n          div.for-presentation {\n            opacity: 1;\n          }\n        }\n\n        &.faq:hover ~ div.link-desc {\n          div.for-faq {\n            opacity: 1;\n          }\n        }\n\n        &.hp:hover ~ div.link-desc {\n          div.for-hp {\n            opacity: 1;\n          }\n        }\n\n        position: relative;\n        svg {\n          height: 0.7em;\n          fill: rgb(60, 60, 60);\n\n          position: absolute;\n          top: 50%;\n          transform: translateY(-50%) translateX(30%);\n\n          transition: 0.2s ease-out;\n        }\n\n        &:hover svg {\n          fill: rgb(240, 240, 240);\n        }\n      }\n\n      div.link-desc {\n        grid-row: 2;\n        grid-column: 1 / 4;\n\n        margin: 2rem 2rem 0;\n\n        border-bottom: 1px solid rgb(95, 95, 95);\n        /* border-radius: 8px; */\n\n        height: 2.5em;\n        position: relative;\n\n        div {\n          display: inline-block;\n          opacity: 0;\n\n          img.icon {\n            height: 2em;\n\n            margin-left: calc(0.5em);\n\n            position: absolute;\n            top: 0;\n            left: 0;\n          }\n\n          span {\n            display: inline-block;\n            height: 2em;\n            line-height: 2em;\n\n            margin-left: calc(2em + 1.5em);\n\n            position: absolute;\n            top: 0;\n            left: 0;\n          }\n        }\n      }\n    }\n  }\n\n  section.intro {\n    text-align: center;\n\n    div.intro-title {\n      font-size: 1.5em;\n      font-weight: 700;\n    }\n\n    div.intro-content-container {\n      width: 100%;\n      min-height: 350px;\n\n      position: relative;\n\n      div.intro-content {\n        position: absolute;\n        top: 47%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n\n        div {\n          border-bottom: 1px solid rgb(80, 80, 80);\n          width: 160px;\n          margin: 1.3em 1em;\n          font-size: 1.2em;\n          transition: 0.2s ease-out;\n          box-shadow: 0px 0px 0px rgba(200, 200, 200, 0);\n\n          pointer-events: none;\n\n          &:hover {\n            border-bottom: 1px solid rgb(50, 50, 50);\n            box-shadow: 0px 2px 0px rgba(199, 143, 90, 0.6);\n          }\n\n          a {\n            display: inline-block;\n            width: 100%;\n            text-decoration: none;\n            color: rgb(30, 30, 30);\n            transition: 0.2s ease-out;\n            text-shadow: 0px 0px 0px rgba(200, 200, 200, 0.6);\n\n            pointer-events: auto;\n\n            &:hover {\n              color: rgb(10, 10, 10);\n              text-shadow: 2px 2px 2px rgba(200, 200, 200, 0.6);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  div.next {\n    width: 100%;\n    height: 80vh;\n\n    text-align: center;\n\n    & > div {\n      font-size: 3rem;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      -webkit-transform: translate(-50%, -50%);\n    }\n  }\n`;\n\nfunction Top() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <TopDiv>\n      <section className=\"desc\">\n        <div className=\"desc-title\">進め方について</div>\n        <div className=\"desc-content\">\n          <div>下記に記す順に進めることを想定している</div>\n          <ol>\n            <li>上部ナビゲーションバーから, 各項目へ移動し取り組む</li>\n            <li>「使い方」にて, 基本操作を学ぶ</li>\n            <li>「練習」にて, 実際に回路を組む</li>\n            <li>\n              「課題１」と「課題２」にて課題に取り組み, 構成ファイルを提出する\n            </li>\n          </ol>\n          <div>\n            また, 適宜<span className=\"hl1\">配布資料</span>や\n            <span className=\"hl1\">発表資料</span>,{\" \"}\n            <span className=\"hl1\">よくある質問</span>を確認し,\n            不備の内容に進めること\n          </div>\n        </div>\n      </section>\n      <section className=\"link\">\n        <div className=\"link-title\">参考リンク</div>\n        <div className=\"link-grid-container\">\n          <a\n            className=\"presentation\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.dropbox.com/scl/fi/ztm3jufc9hf15lcxp9xr5/_.pptx?dl=0&rlkey=lwk391t394oeabnv46ucty2fv\"\n          >\n            発表資料\n            <OuterLinkSvg></OuterLinkSvg>\n          </a>\n          <a\n            className=\"faq\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.notion.so/7f5658db1d1544dca7c04bd93cb10b52\"\n          >\n            よくある質問\n            <OuterLinkSvg></OuterLinkSvg>\n          </a>\n          <a\n            className=\"hp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://nu-nishimori-lab.netlify.app/\"\n          >\n            研究室ホームページ\n            <OuterLinkSvg></OuterLinkSvg>\n          </a>\n          <div className=\"link-desc\">\n            <div className=\"for-presentation\">\n              <img\n                className=\"icon\"\n                src={`${process.env.PUBLIC_URL}/footer/presentation.svg`}\n                alt=\"プレゼンの画像\"\n              ></img>\n              <span>冒頭の発表に利用したプレゼンテーション資料です</span>\n            </div>\n            <div className=\"for-faq\">\n              <img\n                className=\"icon\"\n                src={`${process.env.PUBLIC_URL}/footer/request.svg`}\n                alt=\"質問の画像\"\n              ></img>\n              <span>本演習においてよくある質問について掲載しています</span>\n            </div>\n            <div className=\"for-hp\">\n              <img\n                className=\"icon\"\n                src={`${process.env.PUBLIC_URL}/footer/homepage.svg`}\n                alt=\"ホームページの画像\"\n              ></img>\n              <span>西森研究室の活動内容などが書いてあるホームページです</span>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"intro\">\n        <div className=\"intro-title\">早速取り組む</div>\n        <div className=\"intro-content-container\">\n          <div className=\"intro-content\">\n            <div>\n              {/* <img></img> */}\n              <Link to=\"/circuit-simulation-app/usage\">使い方</Link>\n            </div>\n            <div>\n              {/* <img></img> */}\n              <Link to=\"/circuit-simulation-app/exercise\">練習</Link>\n            </div>\n            <div>\n              {/* <img></img> */}\n              <Link to=\"/circuit-simulation-app/work1\">課題1</Link>\n            </div>\n            <div>\n              {/* <img></img> */}\n              <Link to=\"/circuit-simulation-app/work2\">課題2</Link>\n            </div>\n          </div>\n        </div>\n      </section>\n    </TopDiv>\n  );\n}\n\nexport default Top;\n","import React, { useEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst WorkspaceDiv = styled.div`\n  margin: 0 3vw;\n  margin-bottom: 3rem;\n\n  div.cjb-load-container {\n    margin-bottom: 20px;\n    display: grid;\n    grid-template-columns: 1fr 304px 1fr 304px 1fr;\n\n    div.pad {\n      display: inline-block;\n    }\n    div.button-div {\n      display: inline-block;\n      margin: 0 0px;\n    }\n    input[type=\"file\"] {\n      width: 0.1px;\n      height: 0.1px;\n      opacity: 0;\n      overflow: hidden;\n      position: absolute;\n      z-index: -1;\n    }\n\n    button,\n    label {\n      font-size: 0.9rem;\n      display: inline-block;\n      width: 100%;\n      height: 50px;\n      line-height: 50px;\n      color: #555;\n      font-weight: 700;\n      background-color: #f9f9f9;\n      border-radius: 5px;\n      border: 2px solid #666;\n\n      text-align: left;\n\n      position: relative;\n      padding: 0;\n\n      user-select: none;\n      -webkit-user-select: none;\n\n      cursor: pointer;\n\n      &:before {\n        z-index: -1;\n        position: absolute;\n        bottom: -8px;\n        left: -2px;\n\n        display: block;\n\n        width: 100%;\n        height: 8px;\n\n        content: \"\";\n        -webkit-transition: all 0.3s;\n        transition: all 0.3s;\n\n        border: 2px solid #666;\n        border-top: 1px solid #666;\n        border-radius: 0 0 0.5rem 0.5rem;\n        background-image: -webkit-repeating-linear-gradient(\n          135deg,\n          #404040,\n          #000 1px,\n          transparent 2px,\n          transparent 5px\n        );\n        background-image: repeating-linear-gradient(\n          -45deg,\n          #404040,\n          #404040 1px,\n          transparent 2px,\n          transparent 5px\n        );\n        background-size: 7px 7px;\n\n        -webkit-backface-visibility: hidden;\n        backface-visibility: hidden;\n      }\n\n      &:hover {\n        color: #444;\n        background-color: #eee;\n        &:before {\n          bottom: -5px;\n        }\n      }\n\n      & span.dummy-icon {\n        display: inline-block;\n        width: 45px;\n        height: 30px;\n      }\n\n      & span.button-text {\n        display: inline-block;\n        width: 255px;\n        text-align: center;\n      }\n\n      /* アイコン */\n      & img {\n        display: inline-block;\n        width: 30px;\n        height: 30px;\n\n        position: absolute;\n        top: 50%;\n        left: 0;\n        transform: translateY(-50%);\n        -webkit-transform: translateY(-50%);\n        margin: 0 0 0 15px;\n      }\n    }\n  }\n\n  div.simcir-container {\n    overflow: scroll;\n  }\n`;\n\nfunction Workspace(props) {\n  // props\n  //  .loadCircuitIdx: 初期ロード対象の回路インデックス(0始まり)\n  //  .saveFileName: 回路構成ダウンロード時のファイル名\n\n  const [inputVal, setInputVal] = useState(\"\");\n\n  const initCircuit = '{\"height\": 700, \"width\":2000}';\n  const loadButtonId = `load-circuit-${props.loadCircuitIdx}`;\n\n  // class componentでの'componentDidMout' とか 'componentDidUpdate'とかと類似\n  useEffect(() => {\n    document.getElementById(loadButtonId).click();\n  });\n\n  const updateCircuit = function (text) {\n    document.getElementById(\"update-circuit\").value = text;\n    document.getElementById(\"update-circuit\").click();\n  };\n\n  const upload = function (event) {\n    if (event.target.value !== \"\") {\n      var reader_ = new FileReader();\n\n      reader_.onload = function () {\n        let date_array = new Uint8Array(reader_.result.slice(0, 9));\n        let text_array = new Uint8Array(reader_.result.slice(10));\n\n        for (let i = 0; i < text_array.length; i++) {\n          text_array[i] -= date_array[8];\n        }\n\n        const text = new TextDecoder(\"utf-8\").decode(text_array);\n\n        updateCircuit(text);\n      };\n      reader_.readAsArrayBuffer(event.target.files[0]);\n    }\n  };\n\n  const download = function (event) {\n    document.getElementById(\"download-circuit\").value = props.saveFileName;\n    document.getElementById(\"download-circuit\").click();\n  };\n\n  return (\n    <WorkspaceDiv>\n      <div className=\"cjb-load-container\">\n        <div className=\"pad\"></div>\n        <div className=\"button-div\">\n          <button id=\"dl-button\" onClick={(e) => download(e)}>\n            <span className=\"dummy-icon\"></span>\n            <img\n              src={`${process.env.PUBLIC_URL}/load-button/dl.svg`}\n              alt=\"ダウンロードの画像\"\n            ></img>\n            <span className=\"button-text\">回路構成をダウンロード</span>\n          </button>\n        </div>\n        <div className=\"pad\"></div>\n        <div className=\"button-div\">\n          <input\n            type=\"file\"\n            id=\"ul-button\"\n            value={inputVal}\n            onChange={(e) => upload(e)}\n            onClick={() => setInputVal(\"\")} // 同名ファイルのアップロード時の対策\n          ></input>\n          <label htmlFor=\"ul-button\">\n            <span className=\"dummy-icon\"></span>\n            <img\n              src={`${process.env.PUBLIC_URL}/load-button/ul.svg`}\n              alt=\"アップロードの画像\"\n            ></img>\n            <span className=\"button-text\">回路構成をセットする</span>\n          </label>\n        </div>\n        <div className=\"pad\"></div>\n      </div>\n      <div className=\"simcir-container\">\n        <div className=\"simcir\">{initCircuit}</div>\n      </div>\n    </WorkspaceDiv>\n  );\n}\n\nexport default Workspace;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst ImgPopupDiv = styled.div`\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\n  z-index: 99;\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  margin: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(180, 180, 180, 0.7);\n\n  div {\n    width: 70vw;\n    height: 70vh;\n\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 8px;\n\n    img {\n      &.close-img {\n        position: relative;\n        transform: translate(-35%, -35%);\n        min-width: 30px;\n        width: 2.2vw;\n\n        cursor: pointer;\n        transition: transform 200ms;\n\n        &:hover {\n          transform: translate(-35%, -35%) scale(0.85, 0.85);\n        }\n      }\n      &.main-img {\n        object-fit: contain;\n        width: 90%;\n        height: 90%;\n\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n\n        background-color: rgba(50, 50, 50, 1);\n      }\n    }\n  }\n`;\n\nfunction ImgPopup(props) {\n  return (\n    <ImgPopupDiv show={props.show}>\n      <div>\n        <img\n          className=\"close-img\"\n          src={`${process.env.PUBLIC_URL}/img-popup/close.svg`}\n          alt=\"閉じるボタン\"\n          onClick={props.close}\n        ></img>\n        <img className=\"main-img\" src={props.imgSrc} alt={props.imgAlt}></img>\n      </div>\n    </ImgPopupDiv>\n  );\n}\n\nexport default ImgPopup;\n","import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Workspace from \"../components/workspace\";\nimport ImgPopup from \"../components/imgPopup\";\nimport \"./doc.scss\";\n\nconst UsageDiv = styled.div`\n  z-index: 1;\n  margin-left: 2vw;\n  margin-right: 2vw;\n\n  span.o-circle {\n    &:after {\n      display: inline-block;\n\n      background-color: rgb(251, 204, 45);\n\n      font-size: 0.8em;\n      text-align: center;\n      line-height: 0.8em;\n      width: 0.8em;\n      height: 0.8em;\n\n      margin-right: 0.1em;\n      margin-left: 0.1em;\n\n      border-radius: 50%;\n      border: 1px solid rgb(20, 20, 20);\n\n      content: \"\";\n    }\n  }\n  span.w-circle {\n    &:after {\n      display: inline-block;\n\n      background-color: rgb(240, 240, 240);\n\n      font-size: 0.8em;\n      text-align: center;\n      line-height: 0.8em;\n      width: 0.8em;\n      height: 0.8em;\n\n      margin-right: 0.1em;\n      margin-left: 0.1em;\n\n      border-radius: 50%;\n      border: 1px solid rgb(20, 20, 20);\n\n      content: \"\";\n    }\n  }\n\n  span.device-tips {\n    display: inline-block;\n    vertical-align: top;\n    width: 320px;\n    height: 120px;\n\n    margin: 0.8em 0.3em 0 !important;\n\n    /* border: 1px solid rgb(90, 115, 161); */\n    border: 1px solid rgb(140, 140, 140);\n    border-radius: 5px;\n\n    background-color: rgb(250, 250, 250);\n\n    box-shadow: 2px 2px 4px rgba(30, 30, 30, 0.4);\n\n    div.tips-grid-container {\n      display: grid;\n      grid-template-columns: 60px 1fr;\n      grid-template-rows: 60px 1fr;\n\n      width: 100%;\n      height: 100%;\n      margin: 0 !important;\n\n      div.img-container {\n        margin-top: 0 !important;\n        grid-row: 1;\n        grid-column: 1;\n        position: relative;\n\n        width: 100%;\n        height: 100%;\n\n        img {\n          display: inline-block;\n          /* width: 40px; */\n          height: 40px;\n          margin-top: 0 !important;\n\n          background-color: rgb(240, 240, 240);\n          border: 6px solid rgb(240, 240, 240);\n          border-radius: 10px;\n\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n        }\n      }\n\n      span {\n        display: inline-block;\n        margin-top: 0 !important;\n\n        &.device-name {\n          grid-row: 1;\n          grid-column: 2;\n          line-height: 60px;\n\n          font-family: \"M PLUS 1p\", \"Helvetica Neue\", Arial, sans-serif;\n          font-size: 14px;\n          font-weight: 700;\n\n          text-align: center;\n        }\n        &.device-desc {\n          display: inline-block;\n\n          grid-row: 2;\n          grid-column: 1 / 3;\n\n          border-top: 1px solid rgb(200, 200, 200);\n          margin: 0 5px;\n          padding: 0.8em 0.5em 0 !important;\n\n          font-size: 13px;\n          font-family: \"M PLUS 1p\", \"Helvetica Neue\", Arial, sans-serif;\n          font-weight: 300;\n          line-height: 18px;\n\n          & .img-popup {\n            color: rgb(230, 90, 30);\n            font-weight: 700;\n\n            cursor: pointer;\n\n            &:hover {\n              color: rgb(159, 80, 50);\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction Usage() {\n  const [isShow, setShow] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <UsageDiv>\n      <ImgPopup\n        show={isShow}\n        imgSrc={`${process.env.PUBLIC_URL}/usage/segment.png`}\n        imgAlt=\"セグメントの対応画像\"\n        close={() => setShow(false)}\n      ></ImgPopup>\n      <section className=\"doc\">\n        <div className=\"page-title\">\n          <span>使い方</span>\n          <span>基本的な操作について</span>\n        </div>\n        <div className=\"page-desc\">\n          {/* デバイスの利用 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/cpu.svg`}\n                alt=\"デバイスの画像\"\n              ></img>\n              デバイスの利用\n            </div>\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  左側の<span className=\"hl1\">ツールボックス</span>\n                  から利用したいデバイスを選ぶ\n                </li>\n                <li>\n                  そのデバイスを右側の\n                  <span className=\"hl2\">ワークスペース</span>までドラッグし,\n                  ドロップする\n                </li>\n                <li>\n                  デバイスは任意に動かすことができ,\n                  矩形選択することで複数選択し一気に動かすこともできる\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          {/* デバイスの削除 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/eraser.svg`}\n                alt=\"消しゴムの画像\"\n              ></img>\n              デバイスの削除\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  <span className=\"hl2\">ワークスペース</span>\n                  上の削除したいデバイスを,\n                  <span className=\"hl1\">ツールボックス</span>\n                  までドラッグ＆ドロップ\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          {/* デバイスの接続と切断 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/connect.svg`}\n                alt=\"コネクタの画像\"\n              ></img>\n              デバイス同士の接続と解除\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  デバイスの入力部(橙円<span className=\"o-circle\"></span>\n                  )と出力部(白円<span className=\"w-circle\"></span>\n                  )をドラッグ操作することで接続\n                </li>\n                <li>\n                  デバイスの入力部(橙円<span className=\"o-circle\"></span>\n                  )をクリックすることで, 接続を解除\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          {/* デバイスラベルの変更 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/inspiration.svg`}\n                alt=\"鉛筆の画像\"\n              ></img>\n              デバイスラベルの変更\n            </div>\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  <span className=\"hl2\">ワークスペース</span>\n                  上のデバイスのラベルをダブルクリック\n                </li>\n                <li>\n                  ポップアップしたテキストボックスにて,\n                  ラベルを変更しEnterキーを押す\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          {/* 各デバイスの説明 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/usage/presentation.svg`}\n                alt=\"説明の画像\"\n              ></img>\n              各デバイスの説明\n            </div>\n            <div className=\"desc-cont\">\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/dc.png`}\n                      alt=\"DCの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">直流電源</span>\n                  <span className=\"device-desc\">\n                    直流電源です. 回路の最初に利用してください.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/toggle.png`}\n                      alt=\"トグルスイッチの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">トグルスイッチ</span>\n                  <span className=\"device-desc\">\n                    クリックするごとにＯＮ/ＯＦＦが切り替わります.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/pushon.png`}\n                      alt=\"DCの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">\n                    プッシュオン(クロック)スイッチ\n                  </span>\n                  <span className=\"device-desc\">\n                    このスイッチを押している間だけＯＮになります.\n                  </span>\n                </div>\n              </span>\n\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/or.png`}\n                      alt=\"ORの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">ＯＲ</span>\n                  <span className=\"device-desc\">論理和を実現する回路です.</span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/3or.png`}\n                      alt=\"3入力のORの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">３ＯＲ</span>\n                  <span className=\"device-desc\">\n                    ３つの入力を持つＯＲで,\n                    いずれか一つがＯＮのときに出力がＯＮになります.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/and.png`}\n                      alt=\"ANDの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">ＡＮＤ</span>\n                  <span className=\"device-desc\">論理積を実現する回路です.</span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/3and.png`}\n                      alt=\"3入力のANDの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">３入力ＡＮＤ回路</span>\n                  <span className=\"device-desc\">\n                    ３つの入力を持つＡＮＤで,\n                    すべてがＯＮのときに出力がＯＮになります.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/not.png`}\n                      alt=\"NOTの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">ＮＯＴ回路</span>\n                  <span className=\"device-desc\">\n                    否定を実現する回路で, 入力を反転して出力します.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/xor.png`}\n                      alt=\"XOR回路の画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">ＸＯＲ回路</span>\n                  <span className=\"device-desc\">\n                    排他的論理和を実現する回路です.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/jkff.png`}\n                      alt=\"JKFFの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">ＪＫフリップフロップ回路</span>\n                  <span className=\"device-desc\">\n                    入力が３つあり, 上下がそれぞれＪ, Ｋに対応しており,\n                    中央がクロック入力端子となっています.\n                  </span>\n                </div>\n              </span>\n\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/led.png`}\n                      alt=\"LEDの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">ＬＥＤライト</span>\n                  <span className=\"device-desc\">\n                    入力するとＬＥＤライトが赤く光ります.\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/7seg.png`}\n                      alt=\"7セグメントディスプレイの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">７セグメントディスプレイ</span>\n                  <span className=\"device-desc\">\n                    入力に応じたセグメントが光ります. 入力と各セグメントの対応は\n                    <span className=\"img-popup\" onClick={() => setShow(true)}>\n                      こちら\n                    </span>\n                    .\n                  </span>\n                </div>\n              </span>\n              <span className=\"device-tips\">\n                <div className=\"tips-grid-container\">\n                  <div className=\"img-container\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/usage/device/4bit7seg.png`}\n                      alt=\"４ビット７セグメントディスプレイの画像\"\n                    ></img>\n                  </div>\n                  <span className=\"device-name\">\n                    ４ビット７セグメントディスプレイ\n                  </span>\n                  <span className=\"device-desc\">\n                    入力された４ビットの２進数を, １６進数として表示します.\n                  </span>\n                </div>\n              </span>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Workspace\n        loadCircuitIdx={0}\n        saveFileName=\"t00b000x_usage.cjb\"\n      ></Workspace>\n    </UsageDiv>\n  );\n}\n\nexport default Usage;\n","import React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Workspace from \"../components/workspace\";\nimport \"./doc.scss\";\n\nconst ExerciseDiv = styled.div`\n  z-index: 1;\n  margin-left: 2vw;\n  margin-right: 2vw;\n\n  li {\n    margin-bottom: 0.7em !important;\n  }\n`;\n\nfunction Exercise() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <ExerciseDiv>\n      <section className=\"doc\">\n        <div className=\"page-title\">\n          <span>練習</span>\n          <span>実際にやってみよう</span>\n        </div>\n        <div className=\"page-desc\">\n          {/* 内容 */}\n          <div className=\"container\">\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  <span className=\"hl2\">ＮＯＴ</span>,{\" \"}\n                  <span className=\"hl2\">ＯＲ</span>,{\" \"}\n                  <span className=\"hl2\">ＡＮＤ</span>,{\" \"}\n                  <span className=\"hl2\">ＸＯＲ</span>回路の動作を確認せよ.\n                  入力の切り替えは<span className=\"hl1\">トグルスイッチ</span>\n                  を用いて, 動作の確認は<span className=\"hl1\">ＬＥＤ</span>\n                  を用いること.\n                </li>\n                <li>\n                  <span className=\"hl2\">ＪＫフリップフロップ</span>\n                  の動作を確認せよ. 入力となるパルスは\n                  <span className=\"hl1\">ＰｕｓｈＯｎスイッチ</span>\n                  を用いて, 動作の確認は<span className=\"hl1\">ＬＥＤ</span>\n                  を用いること.\n                </li>\n                <li>\n                  <span className=\"hl1\">トグルスイッチ</span>を用いて,{\" \"}\n                  <span className=\"hl2\">７セグメントディスプレイ</span>\n                  に０〜３を表示せよ\n                </li>\n                <li>\n                  <span className=\"hl1\">トグルスイッチ</span>を用いて,{\" \"}\n                  <span className=\"hl2\">４ビット７セグメントディスプレイ</span>\n                  に０〜Ｆを表示せよ\n                </li>\n                <li>\n                  任意の回路を作成し,{\" \"}\n                  <span className=\"hl2\">\n                    構成ファイル(.cjbファイル)をダウンロード\n                  </span>\n                  せよ. ワークスペース上部にある\n                  <span className=\"hl1\">「回路構成をダウンロード」ボタン</span>\n                  をクリックすることで, 回路の構成ファイルをダウンロードできる\n                </li>\n                <li>\n                  任意の構成ファイル(.cjbファイル)から,{\" \"}\n                  <span className=\"hl2\">回路を復元</span>せよ.{\" \"}\n                  ワークスペース上部にある\n                  <span className=\"hl1\">「回路構成をセットする」ボタン</span>\n                  をクリックすることで, セットしたい構成ファイルを選択できる\n                </li>\n              </ol>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Workspace\n        loadCircuitIdx={1}\n        saveFileName=\"t00b000x_exercise.cjb\"\n      ></Workspace>\n    </ExerciseDiv>\n  );\n}\n\nexport default Exercise;\n","import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Workspace from \"../components/workspace\";\nimport \"./doc.scss\";\n\nconst Work1Div = styled.div`\n  z-index: 1;\n  margin-left: 2vw;\n  margin-right: 2vw;\n\n  li {\n    margin-bottom: 0.7em !important;\n  }\n\n  div.img-container {\n    text-align: center;\n    margin-bottom: 1rem;\n\n    & > div {\n      position: relative;\n\n      display: inline-block;\n      border: 2px solid rgb(60, 60, 60);\n      border-radius: 20px;\n      width: 360px;\n      height: 240px;\n\n      img.segment-img {\n        display: inline-block;\n        height: 90%;\n        width: 90%;\n\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n        -ms-transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n\n        margin-top: 0 !important;\n      }\n    }\n  }\n\n  div.gif-container {\n    text-align: center;\n    margin-bottom: 1rem;\n\n    & > div {\n      position: relative;\n\n      display: inline-block;\n      border: 2px solid rgb(60, 60, 60);\n      border-radius: 20px;\n      width: 540px;\n      height: 330px;\n\n      img {\n        display: inline-block;\n\n        &.gif {\n          height: 98%;\n          width: 98%;\n\n          opacity: ${(props) => (props.isPlayed ? 1 : 0.2)};\n          transition: opacity 600ms;\n        }\n\n        &.icon {\n          height: 60%;\n          cursor: ${(props) => (props.isPlayed ? \"default\" : \"pointer\")};\n\n          opacity: ${(props) => (props.isPlayed ? 0 : 1)};\n\n          transition-property: opacity, height;\n          transition-duration: 600ms, 200ms;\n\n          &:hover {\n            height: 40%;\n          }\n        }\n\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n        -ms-transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n\n        margin-top: 0 !important;\n      }\n    }\n  }\n`;\n\nfunction Work1() {\n  const [isPlayed, setPlay] = useState(false);\n\n  const playGif = function () {\n    setPlay(true);\n    setTimeout(() => {\n      setPlay(false);\n    }, 6100);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Work1Div isPlayed={isPlayed}>\n      <section className=\"doc\">\n        <div className=\"page-title\">\n          <span>課題１</span>\n          <span>３ｂｉｔ入力の７セグメントディスプレイ</span>\n        </div>\n        <div className=\"page-desc\">\n          {/* 課題概要 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/goal.svg`}\n                alt=\"フローの図\"\n              ></img>\n              課題の概要\n            </div>\n            <div className=\"desc-cont\">\n              <div>\n                本課題では, ３ｂｉｔの２進数を入力として,\n                ７セグメントディスプレイ上に, ０〜７を表示する回路を構成する.{\" \"}\n                <br />\n                なお, 各数値は以下の図のように表示させること.\n              </div>\n              <div className=\"img-container\">\n                <div>\n                  <img\n                    src={`${process.env.PUBLIC_URL}/work/each_num_segments.png`}\n                    alt=\"０〜７の数字\"\n                    className=\"segment-img\"\n                  ></img>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 回路構成の流れ */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/process.svg`}\n                alt=\"フローの図\"\n              ></img>\n              回路構成の流れ\n            </div>\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  入力する３ｂｉｔの２進数と, 各セグメントにおける\n                  <span className=\"hl2\">真理値表を作成</span>する <br />\n                  (例: 入力が１００<span className=\"small\">(２)</span>の場合,\n                  ７セグメントディスプレイの２, ３, ６, ７入力目に１を入力する)\n                </li>\n                <li>\n                  先に作成した真理値表をもとに, 各セグメントについての\n                  <span className=\"hl2\">カルノー図</span>を作成し, 簡略化した\n                  <span className=\"hl2\">論理式を導出</span>する\n                </li>\n                <li>\n                  導出した論理式をもとに<span className=\"hl2\">回路を構成</span>\n                  する\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          {/* 確認事項 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/clipboard.svg`}\n                alt=\"確認事項の画像\"\n              ></img>\n              確認事項\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  <span className=\"hl1\">トグルスイッチ</span>\n                  を切り替え入力を変えることで,\n                  それに対応した数値がディスプレイ上に表示されていること\n                </li>\n                <li>\n                  入出力のデバイスとその関係については,\n                  以下に示すＧＩＦアニメーションを参照すること\n                </li>\n                <div className=\"gif-container\">\n                  <div>\n                    <img\n                      className=\"gif\"\n                      src={\n                        isPlayed\n                          ? `${process.env.PUBLIC_URL}/work/in_out/01/animate.gif`\n                          : `${process.env.PUBLIC_URL}/work/in_out/01/init.jpg`\n                      }\n                      alt=\"入出力の関係\"\n                    ></img>\n                    <img\n                      className=\"icon\"\n                      src={`${process.env.PUBLIC_URL}/work/in_out/play-button.svg`}\n                      alt=\"再生ボタン\"\n                      onClick={playGif}\n                    ></img>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n\n          {/* 注意事項 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/bell.svg`}\n                alt=\"注意事項の画像\"\n              ></img>\n              注意事項\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  最初にワークスペース上に設置されているデバイスを基本として,\n                  スイッチとディスプレイ間の回路を考えること\n                </li>\n                <li>\n                  回路構成をわかりやすくするために, 論理式の簡略化や,\n                  デバイスの配置を工夫すること\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Workspace\n        loadCircuitIdx={2}\n        saveFileName=\"t00b000x_work1.cjb\"\n      ></Workspace>\n    </Work1Div>\n  );\n}\n\nexport default Work1;\n","import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Workspace from \"../components/workspace\";\nimport \"./doc.scss\";\n\nconst Work2Div = styled.div`\n  z-index: 1;\n  margin-left: 2vw;\n  margin-right: 2vw;\n\n  li {\n    margin-bottom: 0.7em !important;\n  }\n\n  div.img-container {\n    text-align: center;\n    margin-bottom: 1rem;\n\n    & > div {\n      position: relative;\n\n      display: inline-block;\n      border: 2px solid rgb(60, 60, 60);\n      border-radius: 20px;\n      width: 360px;\n      height: 240px;\n\n      img.segment-img {\n        display: inline-block;\n        height: 90%;\n        width: 90%;\n\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n        -ms-transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n\n        margin-top: 0 !important;\n      }\n    }\n  }\n\n  div.gif-container {\n    text-align: center;\n    margin-bottom: 1rem;\n\n    & > div {\n      position: relative;\n\n      display: inline-block;\n      border: 2px solid rgb(60, 60, 60);\n      border-radius: 20px;\n      width: 560px;\n      height: 220px;\n\n      img {\n        display: inline-block;\n\n        &.gif {\n          height: 98%;\n          width: 98%;\n\n          opacity: ${(props) => (props.isPlayed ? 1 : 0.2)};\n          transition: opacity 600ms;\n        }\n\n        &.icon {\n          height: 60%;\n          cursor: ${(props) => (props.isPlayed ? \"default\" : \"pointer\")};\n\n          opacity: ${(props) => (props.isPlayed ? 0 : 1)};\n\n          transition-property: opacity, height;\n          transition-duration: 400ms, 200ms;\n\n          &:hover {\n            height: 40%;\n          }\n        }\n\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n        -ms-transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n\n        margin-top: 0 !important;\n      }\n    }\n  }\n`;\n\nfunction Work2() {\n  const [isPlayed, setPlay] = useState(false);\n\n  const playGif = function () {\n    setPlay(true);\n    setTimeout(() => {\n      setPlay(false);\n    }, 10100);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Work2Div isPlayed={isPlayed}>\n      <section className=\"doc\">\n        <div className=\"page-title\">\n          <span>課題２</span>\n          <span>１６進カウンタ</span>\n        </div>\n        <div className=\"page-desc\">\n          {/* 課題概要 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/goal.svg`}\n                alt=\"フローの図\"\n              ></img>\n              課題の概要\n            </div>\n            <div className=\"desc-cont\">\n              <div>\n                本課題では,\n                ＪＫフリップフロップを用いた１６進カウンタを構成する.\n                １６進カウンタとは, クロックパルスを入力することで,\n                ４ビットの数値が１ずつ増えていき, １１１１\n                <span className=\"small\">(2)</span>の時に, ００００\n                <span className=\"small\">(2)</span>\n                に戻るということを繰り返すような順序回路のことである.\n              </div>\n              <ol></ol>\n            </div>\n          </div>\n\n          {/* 回路構成の流れ */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/process.svg`}\n                alt=\"フローの図\"\n              ></img>\n              回路構成の流れ\n            </div>\n            <div className=\"desc-cont\">\n              <ol>\n                <li>\n                  ４ビット１６進カウンタの\n                  <span className=\"hl2\">状態遷移表</span>を作成する\n                </li>\n                <li>\n                  状態遷移表をもとに,\n                  <span className=\"hl2\">Ｊ, Ｋについての論理式</span>\n                  を導出する (<span className=\"hl1\">カルノー図</span>等を用いる)\n                </li>\n                <li>\n                  導出した論理式をもとに\n                  <span className=\"hl2\">\n                    ＪＫフリップフロップを用いた回路を構成\n                  </span>\n                  する\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          {/* 確認事項 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/clipboard.svg`}\n                alt=\"確認事項の画像\"\n              ></img>\n              確認事項\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  プッシュオンスイッチを押すごとに, ディスプレイ上の数値が進む\n                </li>\n                <li>\n                  ディスプレイ上の数値がＦの時にプッシュオンスイッチを押すと,\n                  ０に戻る\n                </li>\n                <li>\n                  入出力のデバイスとそれらの挙動については,\n                  以下に示すＧＩＦアニメーションを参照すること\n                </li>\n                <div className=\"gif-container\">\n                  <div>\n                    <img\n                      className=\"gif\"\n                      src={\n                        isPlayed\n                          ? `${process.env.PUBLIC_URL}/work/in_out/02/animate.gif`\n                          : `${process.env.PUBLIC_URL}/work/in_out/02/init.jpg`\n                      }\n                      alt=\"入出力の関係\"\n                    ></img>\n                    <img\n                      className=\"icon\"\n                      src={`${process.env.PUBLIC_URL}/work/in_out/play-button.svg`}\n                      alt=\"再生ボタン\"\n                      onClick={playGif}\n                    ></img>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          </div>\n\n          {/* 注意事項 */}\n          <div className=\"container\">\n            <div className=\"desc-title\">\n              <img\n                src={`${process.env.PUBLIC_URL}/work/bell.svg`}\n                alt=\"注意事項の画像\"\n              ></img>\n              注意事項\n            </div>\n            <div className=\"desc-cont\">\n              <ul>\n                <li>\n                  クロックスイッチによる入力のみで,\n                  カウンタが進むような回路構成にすること\n                </li>\n                <li>\n                  ＪＫフリップフロップの特性をよく考えて, 回路を構成すること\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Workspace\n        loadCircuitIdx={3}\n        saveFileName=\"t00b000x_work2.cjb\"\n      ></Workspace>\n    </Work2Div>\n  );\n}\n\nexport default Work2;\n","import \"./App.css\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nimport Header from \"./views/components/header\";\nimport Footer from \"./views/components/footer\";\nimport Top from \"./views/pages/top\";\nimport Usage from \"./views/pages/usage\";\nimport Exercise from \"./views/pages/exercise\";\nimport Work1 from \"./views/pages/work1\";\nimport Work2 from \"./views/pages/work2\";\n\nconst AppDiv = styled.div`\n  div.body-container {\n    /* margin-left: 2vw;\n    margin-right: 2vw; */\n  }\n`;\n\nfunction App() {\n  return (\n    <AppDiv>\n      <BrowserRouter>\n        <Header></Header>\n        <div className=\"body-container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/\"\n              component={Top}\n            ></Route>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/usage\"\n              component={Usage}\n            ></Route>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/exercise\"\n              component={Exercise}\n            ></Route>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/work1\"\n              component={Work1}\n            ></Route>\n            <Route\n              exact\n              path=\"/circuit-simulation-app/work2\"\n              component={Work2}\n            ></Route>\n            <Route>not found</Route>\n          </Switch>\n        </div>\n        <Footer></Footer>\n      </BrowserRouter>\n    </AppDiv>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}