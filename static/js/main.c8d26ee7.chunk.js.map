{"version":3,"sources":["logo.svg","views/components/header.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","HeaderDiv","styled","div","Header","props","ThemeProvider","AppBar","position","Toolbar","className","to","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,mFCUTA,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKdC,EAAYC,IAAOC,IAAV,o9BAwEAC,MA/Bf,SAAgBC,GACd,OACE,cAACJ,EAAD,UACE,cAACK,EAAA,EAAD,CAAeb,MAAOA,EAAtB,SACE,cAACc,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,oFACA,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAG,OAAT,kCAEF,qBAAKD,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,kCAEF,qBAAKD,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAG,YAAT,4BAEF,qBAAKD,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,6BAEF,qBAAKD,UAAU,WAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,0CCzCDC,MAnCf,WACE,OACE,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,OAAZ,SACE,yCAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,mBACA,cAAC,IAAD,CAAOA,KAAK,YAAZ,sBACA,cAAC,IAAD,CAAOA,KAAK,SAAZ,mBACA,cAAC,IAAD,CAAOA,KAAK,SAAZ,4BCPKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8d26ee7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MediaQuery, { useMediaQuery } from \"react-responsive\";\n\nimport styled from \"styled-components\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#303030\",\n      main: \"#202020\",\n      dark: \"#101010\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst HeaderDiv = styled.div`\n  z-index: 99999;\n\n  div.header-right {\n    margin-left: auto;\n    /* margin-right: -12; */\n\n    .link-div {\n      border-left: 2px solid #505050;\n      width: 150px;\n      text-align: center;\n      display: inline-block;\n      /* margin: 0; */\n\n      a {\n        color: rgb(200, 200, 200);\n        display: block;\n        width: 100%;\n        height: 100%;\n\n        text-decoration: none;\n        font-family: \"M PLUS 1p\", \"Helvetica Neue\", Arial, sans-serif;\n        transition: 0.3s ease-out;\n        text-shadow: 0px 0px 0px rgba(170, 170, 170, 0.6);\n      }\n\n      /* \"to left\" / \"to right\" - affects initial color */\n      background: linear-gradient(to left, #202020 50%, #505050 50%) right;\n      background-size: 200%;\n      transition: 0.2s ease-out;\n\n      &:hover {\n        background-position: left;\n        a {\n          text-shadow: 2px 2px 2px rgba(150, 150, 150, 0.5);\n        }\n      }\n    }\n  }\n`;\n\nfunction Header(props) {\n  return (\n    <HeaderDiv>\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <span>回路シミュレータ</span>\n            <div className=\"header-right\">\n              <div className=\"link-div\">\n                <Link to=\"/top\">トップ</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/usage\">使い方</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/exercise\">練習</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/work1\">課題1</Link>\n              </div>\n              <div className=\"link-div\">\n                <Link to=\"/work2\">課題2</Link>\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </ThemeProvider>\n    </HeaderDiv>\n  );\n}\n\nexport default Header;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./views/components/header\";\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Header></Header>\n        <Switch>\n          <Route path=\"/top\">\n            <div>hoge</div>\n          </Route>\n          <Route path=\"/usage\">usage</Route>\n          <Route path=\"/exercise\">exercise</Route>\n          <Route path=\"/work1\">work1</Route>\n          <Route path=\"/work2\">work2</Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}